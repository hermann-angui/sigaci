security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_login:
            pattern: ^/api/auth
            stateless: true
            json_login:
                check_path: /api/auth/login # The name in routes.yaml is enough for mapping
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api/
            stateless: true
            entry_point: jwt
            provider: app_user_provider
            logout:
                path: api_token_invalidate
            jwt: ~
            refresh_jwt:
                check_path: /api/token/refresh
                provider: app_user_provider
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                username_parameter: username
                password_parameter: password
                default_target_path: app_dashboard
            logout:
                path: app_logout
                target: app_login
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            lazy: true
#            entry_point: form_login
#            provider: app_user_provider
#            form_login:
#                login_path: app_login
#                check_path: app_login
#                enable_csrf: true
#            logout:
#                path: app_logout
#                target: app_dashboard
#            custom_authenticators:
#                - App\Security\FormAuthenticator
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
#         - { path: ^/profile, roles: ROLE_USER }
#         - { path: ^(?!/(login|reset-password|api/docs|media)), roles: ROLE_USER }
#         - { path: ^/api/auth, roles: PUBLIC_ACCESS }
#         - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
         - { path: ^(?!/(login|reset-password|api/docs|media|assets)), roles: ROLE_USER }
         - { path: ^/$, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI
         - { path: ^/api/docs, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI docs
         - { path: ^/api/contexts, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI contexts
         - { path: ^/api/(auth|token/refresh), roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
